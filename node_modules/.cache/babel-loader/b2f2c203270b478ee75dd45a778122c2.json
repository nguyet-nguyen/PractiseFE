{"ast":null,"code":"// @mui material components\nimport Box from \"@mui/material/Box\";\nimport { styled } from \"@mui/material/styles\";\nexport default styled(Box)(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  const {\n    palette,\n    functions,\n    borders,\n    boxShadows\n  } = theme;\n  const {\n    variant,\n    bgColor,\n    color,\n    opacity,\n    borderRadius,\n    shadow,\n    coloredShadow\n  } = ownerState;\n  const {\n    gradients,\n    grey,\n    white\n  } = palette;\n  const {\n    linearGradient\n  } = functions;\n  const {\n    borderRadius: radius\n  } = borders;\n  const {\n    colored\n  } = boxShadows;\n  const greyColors = {\n    \"grey-100\": grey[100],\n    \"grey-200\": grey[200],\n    \"grey-300\": grey[300],\n    \"grey-400\": grey[400],\n    \"grey-500\": grey[500],\n    \"grey-600\": grey[600],\n    \"grey-700\": grey[700],\n    \"grey-800\": grey[800],\n    \"grey-900\": grey[900]\n  };\n  const validGradients = [\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\", \"light\"];\n  const validColors = [\"transparent\", \"white\", \"black\", \"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"light\", \"dark\", \"text\", \"grey-100\", \"grey-200\", \"grey-300\", \"grey-400\", \"grey-500\", \"grey-600\", \"grey-700\", \"grey-800\", \"grey-900\"];\n  const validBorderRadius = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl\", \"section\"];\n  const validBoxShadows = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl\", \"inset\"]; // background value\n\n  let backgroundValue = bgColor;\n\n  if (variant === \"gradient\") {\n    backgroundValue = validGradients.find(el => el === bgColor) ? linearGradient(gradients[bgColor].main, gradients[bgColor].state) : white.main;\n  } else if (validColors.find(el => el === bgColor)) {\n    backgroundValue = palette[bgColor] ? palette[bgColor].main : greyColors[bgColor];\n  } else {\n    backgroundValue = bgColor;\n  } // color value\n\n\n  let colorValue = color;\n\n  if (validColors.find(el => el === color)) {\n    colorValue = palette[color] ? palette[color].main : greyColors[color];\n  } // borderRadius value\n\n\n  let borderRadiusValue = borderRadius;\n\n  if (validBorderRadius.find(el => el === borderRadius)) {\n    borderRadiusValue = radius[borderRadius];\n  } // boxShadow value\n\n\n  let boxShadowValue = \"none\";\n\n  if (validBoxShadows.find(el => el === shadow)) {\n    boxShadowValue = boxShadows[shadow];\n  } else if (coloredShadow) {\n    boxShadowValue = colored[coloredShadow] ? colored[coloredShadow] : \"none\";\n  }\n\n  return {\n    opacity,\n    background: backgroundValue,\n    color: colorValue,\n    borderRadius: borderRadiusValue,\n    boxShadow: boxShadowValue\n  };\n});","map":{"version":3,"sources":["F:/Unlock-program/unlock/PractiseFE/src/components/MKBox/MKBoxRoot.js"],"names":["Box","styled","theme","ownerState","palette","functions","borders","boxShadows","variant","bgColor","color","opacity","borderRadius","shadow","coloredShadow","gradients","grey","white","linearGradient","radius","colored","greyColors","validGradients","validColors","validBorderRadius","validBoxShadows","backgroundValue","find","el","main","state","colorValue","borderRadiusValue","boxShadowValue","background","boxShadow"],"mappings":"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","sourcesContent":["// @mui material components\r\nimport Box from \"@mui/material/Box\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nexport default styled(Box)(({ theme, ownerState }) => {\r\n  const { palette, functions, borders, boxShadows } = theme;\r\n  const { variant, bgColor, color, opacity, borderRadius, shadow, coloredShadow } = ownerState;\r\n\r\n  const { gradients, grey, white } = palette;\r\n  const { linearGradient } = functions;\r\n  const { borderRadius: radius } = borders;\r\n  const { colored } = boxShadows;\r\n\r\n  const greyColors = {\r\n    \"grey-100\": grey[100],\r\n    \"grey-200\": grey[200],\r\n    \"grey-300\": grey[300],\r\n    \"grey-400\": grey[400],\r\n    \"grey-500\": grey[500],\r\n    \"grey-600\": grey[600],\r\n    \"grey-700\": grey[700],\r\n    \"grey-800\": grey[800],\r\n    \"grey-900\": grey[900],\r\n  };\r\n\r\n  const validGradients = [\r\n    \"primary\",\r\n    \"secondary\",\r\n    \"info\",\r\n    \"success\",\r\n    \"warning\",\r\n    \"error\",\r\n    \"dark\",\r\n    \"light\",\r\n  ];\r\n\r\n  const validColors = [\r\n    \"transparent\",\r\n    \"white\",\r\n    \"black\",\r\n    \"primary\",\r\n    \"secondary\",\r\n    \"info\",\r\n    \"success\",\r\n    \"warning\",\r\n    \"error\",\r\n    \"light\",\r\n    \"dark\",\r\n    \"text\",\r\n    \"grey-100\",\r\n    \"grey-200\",\r\n    \"grey-300\",\r\n    \"grey-400\",\r\n    \"grey-500\",\r\n    \"grey-600\",\r\n    \"grey-700\",\r\n    \"grey-800\",\r\n    \"grey-900\",\r\n  ];\r\n\r\n  const validBorderRadius = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl\", \"section\"];\r\n  const validBoxShadows = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl\", \"inset\"];\r\n\r\n  // background value\r\n  let backgroundValue = bgColor;\r\n\r\n  if (variant === \"gradient\") {\r\n    backgroundValue = validGradients.find((el) => el === bgColor)\r\n      ? linearGradient(gradients[bgColor].main, gradients[bgColor].state)\r\n      : white.main;\r\n  } else if (validColors.find((el) => el === bgColor)) {\r\n    backgroundValue = palette[bgColor] ? palette[bgColor].main : greyColors[bgColor];\r\n  } else {\r\n    backgroundValue = bgColor;\r\n  }\r\n\r\n  // color value\r\n  let colorValue = color;\r\n\r\n  if (validColors.find((el) => el === color)) {\r\n    colorValue = palette[color] ? palette[color].main : greyColors[color];\r\n  }\r\n\r\n  // borderRadius value\r\n  let borderRadiusValue = borderRadius;\r\n\r\n  if (validBorderRadius.find((el) => el === borderRadius)) {\r\n    borderRadiusValue = radius[borderRadius];\r\n  }\r\n\r\n  // boxShadow value\r\n  let boxShadowValue = \"none\";\r\n\r\n  if (validBoxShadows.find((el) => el === shadow)) {\r\n    boxShadowValue = boxShadows[shadow];\r\n  } else if (coloredShadow) {\r\n    boxShadowValue = colored[coloredShadow] ? colored[coloredShadow] : \"none\";\r\n  }\r\n\r\n  return {\r\n    opacity,\r\n    background: backgroundValue,\r\n    color: colorValue,\r\n    borderRadius: borderRadiusValue,\r\n    boxShadow: boxShadowValue,\r\n  };\r\n});\r\n"]},"metadata":{},"sourceType":"module"}