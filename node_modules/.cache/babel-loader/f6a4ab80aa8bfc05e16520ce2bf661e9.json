{"ast":null,"code":"var _jsxFileName = \"F:\\\\Unlock-program\\\\unlock\\\\PractiseFE\\\\src\\\\examples\\\\Cards\\\\TeamCards\\\\HorizontalTeamCard\\\\index.js\";\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\"; // @mui material components\n\nimport Card from \"@mui/material/Card\";\nimport Grid from \"@mui/material/Grid\"; // Practise React React components\n\nimport MKBox from \"components/MKBox\";\nimport MKTypography from \"components/MKTypography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HorizontalTeamCard(_ref) {\n  let {\n    image,\n    name,\n    position,\n    description\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      mt: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        lg: 4,\n        sx: {\n          mt: -6\n        },\n        children: /*#__PURE__*/_jsxDEV(MKBox, {\n          width: \"100%\",\n          pt: 2,\n          pb: 1,\n          px: 2,\n          children: /*#__PURE__*/_jsxDEV(MKBox, {\n            component: \"img\",\n            src: image,\n            alt: name,\n            width: \"100%\",\n            borderRadius: \"md\",\n            shadow: \"lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        lg: 8,\n        sx: {\n          my: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(MKBox, {\n          pt: {\n            xs: 1,\n            lg: 2.5\n          },\n          pb: 2.5,\n          pr: 4,\n          pl: {\n            xs: 4,\n            lg: 1\n          },\n          lineHeight: 1,\n          children: [/*#__PURE__*/_jsxDEV(MKTypography, {\n            variant: \"h5\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MKTypography, {\n            variant: \"h6\",\n            color: position.color,\n            mb: 1,\n            children: position.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MKTypography, {\n            variant: \"body2\",\n            color: \"text\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n} // Typechecking props for the HorizontalTeamCard\n\n\n_c = HorizontalTeamCard;\nHorizontalTeamCard.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  position: PropTypes.shape({\n    color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\", \"light\"]),\n    label: PropTypes.string.isRequired\n  }).isRequired,\n  description: PropTypes.string.isRequired\n};\nexport default HorizontalTeamCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"HorizontalTeamCard\");","map":{"version":3,"sources":["F:/Unlock-program/unlock/PractiseFE/src/examples/Cards/TeamCards/HorizontalTeamCard/index.js"],"names":["PropTypes","Card","Grid","MKBox","MKTypography","HorizontalTeamCard","image","name","position","description","mt","my","xs","lg","color","label","propTypes","string","isRequired","shape","oneOf"],"mappings":"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","sourcesContent":["// prop-types is a library for typechecking of props\r\nimport PropTypes from \"prop-types\";\r\n\r\n// @mui material components\r\nimport Card from \"@mui/material/Card\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\n// Practise React React components\r\nimport MKBox from \"components/MKBox\";\r\nimport MKTypography from \"components/MKTypography\";\r\n\r\nfunction HorizontalTeamCard({ image, name, position, description }) {\r\n  return (\r\n    <Card sx={{ mt: 3 }}>\r\n      <Grid container>\r\n        <Grid item xs={12} md={6} lg={4} sx={{ mt: -6 }}>\r\n          <MKBox width=\"100%\" pt={2} pb={1} px={2}>\r\n            <MKBox\r\n              component=\"img\"\r\n              src={image}\r\n              alt={name}\r\n              width=\"100%\"\r\n              borderRadius=\"md\"\r\n              shadow=\"lg\"\r\n            />\r\n          </MKBox>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={8} sx={{ my: \"auto\" }}>\r\n          <MKBox pt={{ xs: 1, lg: 2.5 }} pb={2.5} pr={4} pl={{ xs: 4, lg: 1 }} lineHeight={1}>\r\n            <MKTypography variant=\"h5\">{name}</MKTypography>\r\n            <MKTypography variant=\"h6\" color={position.color} mb={1}>\r\n              {position.label}\r\n            </MKTypography>\r\n            <MKTypography variant=\"body2\" color=\"text\">\r\n              {description}\r\n            </MKTypography>\r\n          </MKBox>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n}\r\n\r\n// Typechecking props for the HorizontalTeamCard\r\nHorizontalTeamCard.propTypes = {\r\n  image: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  position: PropTypes.shape({\r\n    color: PropTypes.oneOf([\r\n      \"primary\",\r\n      \"secondary\",\r\n      \"info\",\r\n      \"success\",\r\n      \"warning\",\r\n      \"error\",\r\n      \"dark\",\r\n      \"light\",\r\n    ]),\r\n    label: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  description: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default HorizontalTeamCard;\r\n"]},"metadata":{},"sourceType":"module"}