{"ast":null,"code":"var _jsxFileName = \"F:\\\\Unlock-program\\\\unlock\\\\PractiseFE\\\\src\\\\components\\\\MKBox\\\\index.js\";\nimport { forwardRef } from \"react\"; // prop-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // Custom styles for MKBox\n\nimport MKBoxRoot from \"components/MKBox/MKBoxRoot\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MKBox = /*#__PURE__*/forwardRef(_c = (_ref, ref) => {\n  let {\n    variant,\n    bgColor,\n    color,\n    opacity,\n    borderRadius,\n    shadow,\n    coloredShadow,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(MKBoxRoot, { ...rest,\n    ref: ref,\n    ownerState: {\n      variant,\n      bgColor,\n      color,\n      opacity,\n      borderRadius,\n      shadow,\n      coloredShadow\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}); // Setting default values for the props of MKBox\n\n_c2 = MKBox;\nMKBox.defaultProps = {\n  variant: \"contained\",\n  bgColor: \"transparent\",\n  color: \"dark\",\n  opacity: 1,\n  borderRadius: \"none\",\n  shadow: \"none\",\n  coloredShadow: \"none\"\n}; // Typechecking props for the MKBox\n\nMKBox.propTypes = {\n  variant: PropTypes.oneOf([\"contained\", \"gradient\"]),\n  bgColor: PropTypes.string,\n  color: PropTypes.string,\n  opacity: PropTypes.number,\n  borderRadius: PropTypes.string,\n  shadow: PropTypes.string,\n  coloredShadow: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"light\", \"dark\", \"none\"])\n};\nexport default MKBox;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MKBox$forwardRef\");\n$RefreshReg$(_c2, \"MKBox\");","map":{"version":3,"sources":["F:/Unlock-program/unlock/PractiseFE/src/components/MKBox/index.js"],"names":["forwardRef","PropTypes","MKBoxRoot","MKBox","ref","variant","bgColor","color","opacity","borderRadius","shadow","coloredShadow","rest","defaultProps","propTypes","oneOf","string","number"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;AAEA,MAAMC,KAAK,gBAAGH,UAAU,MACtB,OAAqFI,GAArF;AAAA,MAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA,KAApB;AAA2BC,IAAAA,OAA3B;AAAoCC,IAAAA,YAApC;AAAkDC,IAAAA,MAAlD;AAA0DC,IAAAA,aAA1D;AAAyE,OAAGC;AAA5E,GAAD;AAAA,sBACE,QAAC,SAAD,OACMA,IADN;AAEE,IAAA,GAAG,EAAER,GAFP;AAGE,IAAA,UAAU,EAAE;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,OAAX;AAAoBC,MAAAA,KAApB;AAA2BC,MAAAA,OAA3B;AAAoCC,MAAAA,YAApC;AAAkDC,MAAAA,MAAlD;AAA0DC,MAAAA;AAA1D;AAHd;AAAA;AAAA;AAAA;AAAA,UADF;AAAA,CADsB,CAAxB,C,CAUA;;MAVMR,K;AAWNA,KAAK,CAACU,YAAN,GAAqB;AACnBR,EAAAA,OAAO,EAAE,WADU;AAEnBC,EAAAA,OAAO,EAAE,aAFU;AAGnBC,EAAAA,KAAK,EAAE,MAHY;AAInBC,EAAAA,OAAO,EAAE,CAJU;AAKnBC,EAAAA,YAAY,EAAE,MALK;AAMnBC,EAAAA,MAAM,EAAE,MANW;AAOnBC,EAAAA,aAAa,EAAE;AAPI,CAArB,C,CAUA;;AACAR,KAAK,CAACW,SAAN,GAAkB;AAChBT,EAAAA,OAAO,EAAEJ,SAAS,CAACc,KAAV,CAAgB,CAAC,WAAD,EAAc,UAAd,CAAhB,CADO;AAEhBT,EAAAA,OAAO,EAAEL,SAAS,CAACe,MAFH;AAGhBT,EAAAA,KAAK,EAAEN,SAAS,CAACe,MAHD;AAIhBR,EAAAA,OAAO,EAAEP,SAAS,CAACgB,MAJH;AAKhBR,EAAAA,YAAY,EAAER,SAAS,CAACe,MALR;AAMhBN,EAAAA,MAAM,EAAET,SAAS,CAACe,MANF;AAOhBL,EAAAA,aAAa,EAAEV,SAAS,CAACc,KAAV,CAAgB,CAC7B,SAD6B,EAE7B,WAF6B,EAG7B,MAH6B,EAI7B,SAJ6B,EAK7B,SAL6B,EAM7B,OAN6B,EAO7B,OAP6B,EAQ7B,MAR6B,EAS7B,MAT6B,CAAhB;AAPC,CAAlB;AAoBA,eAAeZ,KAAf","sourcesContent":["import { forwardRef } from \"react\";\r\n\r\n// prop-types is a library for typechecking of props\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Custom styles for MKBox\r\nimport MKBoxRoot from \"components/MKBox/MKBoxRoot\";\r\n\r\nconst MKBox = forwardRef(\r\n  ({ variant, bgColor, color, opacity, borderRadius, shadow, coloredShadow, ...rest }, ref) => (\r\n    <MKBoxRoot\r\n      {...rest}\r\n      ref={ref}\r\n      ownerState={{ variant, bgColor, color, opacity, borderRadius, shadow, coloredShadow }}\r\n    />\r\n  )\r\n);\r\n\r\n// Setting default values for the props of MKBox\r\nMKBox.defaultProps = {\r\n  variant: \"contained\",\r\n  bgColor: \"transparent\",\r\n  color: \"dark\",\r\n  opacity: 1,\r\n  borderRadius: \"none\",\r\n  shadow: \"none\",\r\n  coloredShadow: \"none\",\r\n};\r\n\r\n// Typechecking props for the MKBox\r\nMKBox.propTypes = {\r\n  variant: PropTypes.oneOf([\"contained\", \"gradient\"]),\r\n  bgColor: PropTypes.string,\r\n  color: PropTypes.string,\r\n  opacity: PropTypes.number,\r\n  borderRadius: PropTypes.string,\r\n  shadow: PropTypes.string,\r\n  coloredShadow: PropTypes.oneOf([\r\n    \"primary\",\r\n    \"secondary\",\r\n    \"info\",\r\n    \"success\",\r\n    \"warning\",\r\n    \"error\",\r\n    \"light\",\r\n    \"dark\",\r\n    \"none\",\r\n  ]),\r\n};\r\n\r\nexport default MKBox;\r\n"]},"metadata":{},"sourceType":"module"}