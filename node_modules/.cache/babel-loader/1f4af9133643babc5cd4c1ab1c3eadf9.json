{"ast":null,"code":"var _jsxFileName = \"F:\\\\Unlock-program\\\\unlock\\\\PractiseFE\\\\src\\\\components\\\\MKButton\\\\index.js\";\nimport { forwardRef } from \"react\"; // prop-types is a library for typechecking of props\n\nimport PropTypes from \"prop-types\"; // Custom styles for MKButton\n\nimport MKButtonRoot from \"components/MKButton/MKButtonRoot\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MKButton = /*#__PURE__*/forwardRef(_c = (_ref, ref) => {\n  let {\n    color,\n    variant,\n    size,\n    circular,\n    iconOnly,\n    children,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(MKButtonRoot, { ...rest,\n    ref: ref,\n    color: \"primary\",\n    variant: variant === \"gradient\" ? \"contained\" : variant,\n    size: size,\n    ownerState: {\n      color,\n      variant,\n      size,\n      circular,\n      iconOnly\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}); // Setting default values for the props of MKButton\n\n_c2 = MKButton;\nMKButton.defaultProps = {\n  size: \"medium\",\n  variant: \"contained\",\n  color: \"white\",\n  circular: false,\n  iconOnly: false\n}; // Typechecking props for the MKButton\n\nMKButton.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  variant: PropTypes.oneOf([\"text\", \"contained\", \"outlined\", \"gradient\"]),\n  color: PropTypes.oneOf([\"default\", \"white\", \"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"light\", \"dark\"]),\n  circular: PropTypes.bool,\n  iconOnly: PropTypes.bool,\n  children: PropTypes.node.isRequired\n};\nexport default MKButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MKButton$forwardRef\");\n$RefreshReg$(_c2, \"MKButton\");","map":{"version":3,"sources":["F:/Unlock-program/unlock/PractiseFE/src/components/MKButton/index.js"],"names":["forwardRef","PropTypes","MKButtonRoot","MKButton","ref","color","variant","size","circular","iconOnly","children","rest","defaultProps","propTypes","oneOf","bool","node","isRequired"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,kCAAzB;;AAEA,MAAMC,QAAQ,gBAAGH,UAAU,MACzB,OAAkEI,GAAlE;AAAA,MAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA,QAAxB;AAAkCC,IAAAA,QAAlC;AAA4CC,IAAAA,QAA5C;AAAsD,OAAGC;AAAzD,GAAD;AAAA,sBACE,QAAC,YAAD,OACMA,IADN;AAEE,IAAA,GAAG,EAAEP,GAFP;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,OAAO,EAAEE,OAAO,KAAK,UAAZ,GAAyB,WAAzB,GAAuCA,OAJlD;AAKE,IAAA,IAAI,EAAEC,IALR;AAME,IAAA,UAAU,EAAE;AAAEF,MAAAA,KAAF;AAASC,MAAAA,OAAT;AAAkBC,MAAAA,IAAlB;AAAwBC,MAAAA,QAAxB;AAAkCC,MAAAA;AAAlC,KANd;AAAA,cAQGC;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAAA,CADyB,CAA3B,C,CAeA;;MAfMP,Q;AAgBNA,QAAQ,CAACS,YAAT,GAAwB;AACtBL,EAAAA,IAAI,EAAE,QADgB;AAEtBD,EAAAA,OAAO,EAAE,WAFa;AAGtBD,EAAAA,KAAK,EAAE,OAHe;AAItBG,EAAAA,QAAQ,EAAE,KAJY;AAKtBC,EAAAA,QAAQ,EAAE;AALY,CAAxB,C,CAQA;;AACAN,QAAQ,CAACU,SAAT,GAAqB;AACnBN,EAAAA,IAAI,EAAEN,SAAS,CAACa,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAAhB,CADa;AAEnBR,EAAAA,OAAO,EAAEL,SAAS,CAACa,KAAV,CAAgB,CAAC,MAAD,EAAS,WAAT,EAAsB,UAAtB,EAAkC,UAAlC,CAAhB,CAFU;AAGnBT,EAAAA,KAAK,EAAEJ,SAAS,CAACa,KAAV,CAAgB,CACrB,SADqB,EAErB,OAFqB,EAGrB,SAHqB,EAIrB,WAJqB,EAKrB,MALqB,EAMrB,SANqB,EAOrB,SAPqB,EAQrB,OARqB,EASrB,OATqB,EAUrB,MAVqB,CAAhB,CAHY;AAenBN,EAAAA,QAAQ,EAAEP,SAAS,CAACc,IAfD;AAgBnBN,EAAAA,QAAQ,EAAER,SAAS,CAACc,IAhBD;AAiBnBL,EAAAA,QAAQ,EAAET,SAAS,CAACe,IAAV,CAAeC;AAjBN,CAArB;AAoBA,eAAed,QAAf","sourcesContent":["import { forwardRef } from \"react\";\r\n\r\n// prop-types is a library for typechecking of props\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Custom styles for MKButton\r\nimport MKButtonRoot from \"components/MKButton/MKButtonRoot\";\r\n\r\nconst MKButton = forwardRef(\r\n  ({ color, variant, size, circular, iconOnly, children, ...rest }, ref) => (\r\n    <MKButtonRoot\r\n      {...rest}\r\n      ref={ref}\r\n      color=\"primary\"\r\n      variant={variant === \"gradient\" ? \"contained\" : variant}\r\n      size={size}\r\n      ownerState={{ color, variant, size, circular, iconOnly }}\r\n    >\r\n      {children}\r\n    </MKButtonRoot>\r\n  )\r\n);\r\n\r\n// Setting default values for the props of MKButton\r\nMKButton.defaultProps = {\r\n  size: \"medium\",\r\n  variant: \"contained\",\r\n  color: \"white\",\r\n  circular: false,\r\n  iconOnly: false,\r\n};\r\n\r\n// Typechecking props for the MKButton\r\nMKButton.propTypes = {\r\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\r\n  variant: PropTypes.oneOf([\"text\", \"contained\", \"outlined\", \"gradient\"]),\r\n  color: PropTypes.oneOf([\r\n    \"default\",\r\n    \"white\",\r\n    \"primary\",\r\n    \"secondary\",\r\n    \"info\",\r\n    \"success\",\r\n    \"warning\",\r\n    \"error\",\r\n    \"light\",\r\n    \"dark\",\r\n  ]),\r\n  circular: PropTypes.bool,\r\n  iconOnly: PropTypes.bool,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default MKButton;\r\n"]},"metadata":{},"sourceType":"module"}